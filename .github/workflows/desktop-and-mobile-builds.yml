name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  # Ejecuta este flujo de trabajo al hacer push a cualquiera de las siguientes ramas
  push:
    branches:
      - master
      - main
  # Ejecuta este flujo de trabajo en eventos de solicitud de extracción que apunten a alguna de las siguientes ramas
  pull_request:
    branches:
      - master
      - main

  # Permite ejecutar este flujo de trabajo manualmente desde la pestaña de Acciones del repositorio
  workflow_dispatch:

env:
  # Versión de construcción
  BUILD_NUMBER: 1
  # Versión de construcción
  BUILD_VERSION: 1.0.0
  # Versión de Python
  PYTHON_VERSION: 3.12.6
  # Versión de Flutter
  FLUTTER_VERSION: 3.24.3

jobs:
  #---------------------

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      # Obtiene el código fuente del repositorio

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
      # Configura la versión de Python especificada

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      # Actualiza pip y instala las dependencias de Python especificadas en requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
      # Configura la versión de Flutter especificada

    - name: Set up Google Cloud credentials
      run: |
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" | Set-Content -Path "$HOME\gcloud.json"
      # Carga las credenciales de Google Cloud desde los secretos del repositorio
  
    - name: Set environment variable for Google credentials
      run: echo "GOOGLE_CREDENTIALS=$HOME\gcloud.json" >> $GITHUB_ENV
      # Establece la variable de entorno para las credenciales de Google Cloud

    - name: Flet Build Windows
      run: |
        flutter config --no-analytics
        flet build windows --verbose --no-rich-output --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION
      # Construye el paquete Windows usando Flet

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build-artifact
        path: build/windows
        if-no-files-found: warn
        overwrite: false
      # Sube el artefacto de construcción de Windows
# -------------------------------------------------------
  build-apk:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
  
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    
    - name: Install Android SDK tools
      run: |
        sudo apt-get update
        sudo apt-get install -y android-sdk android-sdk-build-tools
        sudo ln -s /usr/lib/android-sdk/platform-tools/adb /usr/bin/adb
    
    - name: Install Ninja
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build
      
    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
    
    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '21'
  
    - name: Set up Google Cloud credentials
      run: echo "${{ secrets.GOOGLE_CREDENTIALS }}" > $HOME/gcloud.json
    
    - name: Set environment variable for Google credentials
      run: echo "GOOGLE_CREDENTIALS=$HOME/gcloud.json" >> $GITHUB_ENV
    
    - name: Flutter Doctor
      run: flutter doctor -v
    
    - name: Flet Build APK
      run: |
        flutter config --no-analytics
        flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
  
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: build/apk
        if-no-files-found: warn
        overwrite: false

   
#---------------------
  
  # build-linux:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     # Obtiene el código fuente del repositorio

  #   - name: Setup Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #     # Configura la versión de Python especificada

  #   - name: Install Python Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #     # Actualiza pip y instala las dependencias de Python especificadas en requirements.txt

  #   - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: ${{ env.FLUTTER_VERSION }}
  #     # Configura la versión de Flutter especificada

  #   - name: Patch for linux build
  #     run: |
  #       flutter doctor
  #       sudo apt-get update -y
  #       sudo apt-get install -y ninja-build libgtk-3-dev
  #       flutter doctor
  #     # Aplica parches necesarios para la construcción en Linux

  #   # NUEVA SECCIÓN: Carga las credenciales desde los secretos
  #   - name: Set up Google Cloud credentials
  #     run: echo "${{ secrets.GOOGLE_CREDENTIALS }}" > $HOME/gcloud.json
  #     # Carga las credenciales de Google Cloud desde los secretos del repositorio

  #   - name: Set environment variable for Google credentials
  #     run: export GOOGLE_CREDENTIALS=$HOME/gcloud.json
  #     # Establece la variable de entorno para las credenciales de Google Cloud

      #------------------------------------------

    # - name: Flet Build Linux
    #   run: |
    #     flutter config --no-analytics 
    #     flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
    #   # Construye el paquete Linux usando Flet

    # - name: Upload Linux Artifact
    #   uses: actions/upload-artifact@v4.3.4
    #   with:
    #     name: linux-build-artifact
    #     path: build/linux
    #     if-no-files-found: warn
    #     overwrite: false
    #   # Sube el artefacto de construcción de Linux

  #---------------------

  # build-macos:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     # Obtiene el código fuente del repositorio

  #   - name: Setup Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #     # Configura la versión de Python especificada

  #   - name: Install Python Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #     # Actualiza pip y instala las dependencias de Python especificadas en requirements.txt

  #   - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: ${{ env.FLUTTER_VERSION }}
  #     # Configura la versión de Flutter especificada

  #   - name: Flet Build macOS
  #     run: |
  #       flutter config --no-analytics
  #       flet build macos --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
  #     # Construye el paquete macOS usando Flet

  #   - name: Upload macOS Artifact
  #     uses: actions/upload-artifact@v4.3.4
  #     with:
  #       name: macos-build-artifact
  #       path: build/macos
  #       if-no-files-found: warn
  #       overwrite: false
  #     # Sube el artefacto de construcción de macOS

  #---------------------

  # build-aab:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     # Obtiene el código fuente del repositorio

  #   - name: Setup Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #     # Configura la versión de Python especificada

  #   - name: Install Python Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #     # Actualiza pip y instala las dependencias de Python especificadas en requirements.txt

  #   - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: ${{ env.FLUTTER_VERSION }}
  #     # Configura la versión de Flutter especificada

  #   - name: Flet Build AAB
  #     run: |
  #       flutter config --no-analytics
  #       flet build aab --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION
  #     # Construye el paquete Android (.aab) usando Flet

  #   - name: Upload AAB Artifact
  #     uses: actions/upload-artifact@v4.3.4
  #     with:
  #       name: aab-build-artifact
  #       path: build/aab
  #       if-no-files-found: warn
  #       overwrite: false
  #     # Sube el artefacto de construcción de Android (.aab)
#---------------------
# build-ipa:
#   runs-on: macos-latest

#   steps:
#   - name: Checkout code
#     uses: actions/checkout@v4
#     # Obtiene el código fuente del repositorio

#   - name: Setup Python ${{ env.PYTHON_VERSION }}
#     uses: actions/setup-python@v5
#     with:
#       python-version: ${{ env.PYTHON_VERSION }}
#     # Configura la versión de Python especificada

#   - name: Install Python Dependencies
#     run: |
#       python -m pip install --upgrade pip
#       pip install -r requirements.txt
#     # Actualiza pip y instala las dependencias de Python especificadas en requirements.txt

#   - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#     uses: subosito/flutter-action@v2
#     with:
#       flutter-version: ${{ env.FLUTTER_VERSION }}
#     # Configura la versión de Flutter especificada

#   - name: Flet Build IPA
#     run: |
#       flutter config --no-analytics
#       flet build ipa --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION 
#     # Construye el paquete IPA usando Flet

#   - name: Upload IPA Artifact
#     uses: actions/upload-artifact@v4.3.4
#     with:
#       name: ipa-build-artifact
#       path: build/ipa
#       if-no-files-found: warn
#       overwrite: false
#     # Sube el artefacto de construcción de IPA





# name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

# on:
#   # Runs on push to any of the below branches
#   push:
#     branches:
#       - master
#       - main
#   # Runs on pull request events that target one of the below branches
#   pull_request:
#     branches:
#       - master
#       - main

#   # Allows you to run this workflow manually from the Actions tab of the repository
#   workflow_dispatch:

# env:
#   # https://flet.dev/docs/publish#versioning
#   BUILD_NUMBER: 1
#   BUILD_VERSION: 1.0.0
#   PYTHON_VERSION: 3.12.6
#   FLUTTER_VERSION: 3.24.3

# jobs:
#   build-linux:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Patch for linux build
#       run: |
#         flutter doctor
#         sudo apt-get update -y
#         sudo apt-get install -y ninja-build libgtk-3-dev
#         flutter doctor


#     # NUEVA SECCIÓN: Carga las credenciales desde los secretos
#     - name: Set up Google Cloud credentials
#       run: echo "${{ secrets.GOOGLE_CREDENTIALS }}" > $HOME/gcloud.json

#     - name: Set environment variable for Google credentials
#       run: export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json

#       #------------------------------------------

#     - name: Flet Build Linux
#       run: |
#         flutter config --no-analytics 
#         flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

#     - name: Upload Linux Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: linux-build-artifact
#         path: build/linux
#         if-no-files-found: warn
#         overwrite: false

#   build-macos:
#     runs-on: macos-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Flet Build macOS
#       run: |
#         flutter config --no-analytics
#         flet build macos --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

#     - name: Upload macOS Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: macos-build-artifact
#         path: build/macos
#         if-no-files-found: warn
#         overwrite: false

#   build-windows:
#     runs-on: windows-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Flet Build Windows
#       run: |
#         flutter config --no-analytics
#         flet build windows --verbose --no-rich-output --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION

#     - name: Upload Windows Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: windows-build-artifact
#         path: build/windows
#         if-no-files-found: warn
#         overwrite: false

#   build-aab:
#     runs-on: macos-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Flet Build AAB
#       run: |
#         flutter config --no-analytics
#         flet build aab --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

#     - name: Upload AAB Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: aab-build-artifact
#         path: build/aab
#         if-no-files-found: warn
#         overwrite: false

#   build-apk:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Setup Java JDK
#       uses: actions/setup-java@v4.2.1
#       with:
#         distribution: 'temurin'
#         java-version: '21'

#     - name: Flet Build APK
#       run: |
#         flutter config --no-analytics
#         flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

#     - name: Upload APK Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: apk-build-artifact
#         path: build/apk
#         if-no-files-found: warn
#         overwrite: false

#   build-ipa:
#     runs-on: macos-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Python ${{ env.PYTHON_VERSION }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Install Python Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt

#     - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: ${{ env.FLUTTER_VERSION }}

#     - name: Flet Build IPA
#       run: |
#         flutter config --no-analytics
#         flet build ipa --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION 

#     - name: Upload IPA Artifact
#       uses: actions/upload-artifact@v4.3.4
#       with:
#         name: ipa-build-artifact
#         path: build/ipa
#         if-no-files-found: warn
#         overwrite: false
